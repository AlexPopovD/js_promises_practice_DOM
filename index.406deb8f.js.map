{"mappings":"ACEA,SAAS,EAAmB,CAAO,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC7B,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBAEjC,EACF,EAAa,SAAS,CAAC,GAAG,CAAC,SAE3B,EAAa,SAAS,CAAC,GAAG,CAAC,WAG7B,EAAa,SAAS,CAAG,EACzB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAEA,IAAI,EAAqB,CAAA,EACrB,EAAoB,CAAA,EAElB,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAoB,CAAA,EACpB,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAqB,CAAA,EACrB,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,SAAS,gBAAgB,CAAC,QAAS,WAC7B,GAAsB,GACxB,EAAQ,6BAEZ,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACnC,GAAsB,GACxB,EAAQ,6BAEZ,EACF,GAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAmB,EACrB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAmB,EAAS,CAAA,EAC9B,GAEF,EAAc,IAAI,CAAC,SAAC,CAApB,EAAgC,OAAA,EAAmB,E,GAEnD,EAAa,IAAI,CAAC,SAAC,CAAnB,EAA+B,OAAA,EAAmB,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction createNotification(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    if (isError) notification.classList.add(\"error\");\n    else notification.classList.add(\"success\");\n    notification.innerHTML = message;\n    document.body.append(notification);\n}\nvar rightClickHappened = false;\nvar leftClickHappened = false;\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        leftClickHappened = true;\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        rightClickHappened = true;\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        if (rightClickHappened && leftClickHappened) resolve(\"Third promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        if (rightClickHappened && leftClickHappened) resolve(\"Third promise was resolved\");\n    });\n});\nfirstPromise.then(function(message) {\n    createNotification(message);\n}).catch(function(message) {\n    createNotification(message, true);\n});\nsecondPromise.then(function(message) {\n    return createNotification(message);\n});\nthirdPromise.then(function(message) {\n    return createNotification(message);\n});\n\n//# sourceMappingURL=index.406deb8f.js.map\n","'use strict';\n\nfunction createNotification(message, isError = false) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n\n  if (isError) {\n    notification.classList.add('error');\n  } else {\n    notification.classList.add('success');\n  }\n\n  notification.innerHTML = message;\n  document.body.append(notification);\n}\n\nlet rightClickHappened = false;\nlet leftClickHappened = false;\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    leftClickHappened = true;\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    rightClickHappened = true;\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    if (rightClickHappened && leftClickHappened) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', () => {\n    if (rightClickHappened && leftClickHappened) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then((message) => {\n    createNotification(message);\n  })\n  .catch((message) => {\n    createNotification(message, true);\n  });\n\nsecondPromise.then((message) => createNotification(message));\n\nthirdPromise.then((message) => createNotification(message));\n"],"names":["createNotification","message","isError","arguments","length","notification","document","createElement","setAttribute","classList","add","innerHTML","body","append","rightClickHappened","leftClickHappened","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","e","preventDefault","thirdPromise","then","catch"],"version":3,"file":"index.406deb8f.js.map"}